apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  labels:
    app.kubernetes.io/instance: my-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: kubernetes-dashboard-5.0.0
  annotations:
    meta.helm.sh/release-name: my-dashboard
    meta.helm.sh/release-namespace: default
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-dashboard-kubernetes-dashboard-admin
  labels:
    app.kubernetes.io/instance: my-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: kubernetes-dashboard-5.0.0
  annotations:
    meta.helm.sh/release-name: my-dashboard
    meta.helm.sh/release-namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-dashboard-kubernetes-dashboard-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-dashboard-kubernetes-dashboard-admin
  labels:
    app.kubernetes.io/instance: my-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/version: 2.3.1
    helm.sh/chart: kubernetes-dashboard-5.0.0
  annotations:
    meta.helm.sh/release-name: my-dashboard
    meta.helm.sh/release-namespace: default
rules:
  #   # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
  #   verbs: ["get", "update", "delete","list"]
  #   # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  # - apiGroups: [""]
  #   resources: ["configmaps"]
  #   resourceNames: ["kubernetes-dashboard-settings"]
  #   verbs: ["get", "update"]
  #   # Allow Dashboard to get metrics.
  # - apiGroups: [""]
  #   resources: ["services"]
  #   resourceNames: ["heapster", "dashboard-metrics-scraper"]
  #   verbs: ["proxy"]
  # - apiGroups: [""]
  #   resources: ["services/proxy"]
  #   resourceNames: ["heapster", "http:heapster:", "https:heapster:", "dashboard-metrics-scraper", "http:dashboard-metrics-scraper"]
  #   verbs: ["get"]
  
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - pods
      - replicationcontrollers
      - replicationcontrollers/scale
      - serviceaccounts
      - services
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - bindings
      - events
      - limitranges
      - namespaces/status
      - pods/log
      - pods/status
      - replicationcontrollers/status
      - resourcequotas
      - resourcequotas/status
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - replicasets
      - replicasets/scale
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - ingresses
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
      - ingresses
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
      - roles
      - rolebindings
    verbs:
      - get
      - list
      - watch
      - update
      - delete
      - create
      - patch